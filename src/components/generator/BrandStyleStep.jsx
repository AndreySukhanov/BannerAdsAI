import { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Badge } from "@/components/ui/badge";
import { Loader2, Globe, Palette, Type, ArrowRight, ArrowLeft, Sparkles, Eye, Target } from "lucide-react";
import { motion, AnimatePresence } from "framer-motion";

const API_BASE_URL = import.meta.env.VITE_API_BASE_URL || 'http://localhost:3014';

export default function BrandStyleStep({ config, setConfig, onNext, onBack }) {
  const [websiteUrl, setWebsiteUrl] = useState(config.brandingData?.url || config.url || '');
  const [isAnalyzing, setIsAnalyzing] = useState(false);
  const [brandingData, setBrandingData] = useState(config.brandingData || null);
  const [error, setError] = useState('');
  const [showPreview, setShowPreview] = useState(false);

  // Auto-populate URL from previous step if not already set
  useEffect(() => {
    if (!websiteUrl && config.url) {
      setWebsiteUrl(config.url);
    }
  }, [config.url, websiteUrl]);

  // –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞
  const analyzeBrandStyle = async () => {
    if (!websiteUrl.trim()) {
      setError('–í–≤–µ–¥–∏—Ç–µ URL —Å–∞–π—Ç–∞');
      return;
    }

    try {
      // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è URL
      const url = new URL(websiteUrl);
      if (!['http:', 'https:'].includes(url.protocol)) {
        throw new Error('URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://');
      }
    } catch {
      setError('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: https://example.com');
      return;
    }

    setIsAnalyzing(true);
    setError('');

    try {
      console.log('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –±—Ä–µ–Ω–¥–∏–Ω–≥ —Å–∞–π—Ç–∞:', websiteUrl);
      
      const response = await fetch(`${API_BASE_URL}/api/brand-parser/analyze`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          url: websiteUrl
        })
      });

      const result = await response.json();

      if (!response.ok) {
        throw new Error(result.error || '–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞');
      }

      if (result.success) {
        setBrandingData(result.data);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –±—Ä–µ–Ω–¥–∏–Ω–≥–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        setConfig(prev => ({
          ...prev,
          brandingData: result.data,
          useBrandStyle: true
        }));

        console.log('‚úÖ –ë—Ä–µ–Ω–¥–∏–Ω–≥ —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω:', result.data);
      } else {
        throw new Error(result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
      }

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –±—Ä–µ–Ω–¥–∏–Ω–≥–∞:', error);
      setError(error.message);
    } finally {
      setIsAnalyzing(false);
    }
  };

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±—Ä–µ–Ω–¥–∏–Ω–≥–∞
  const toggleBrandStyle = () => {
    setConfig(prev => ({
      ...prev,
      useBrandStyle: !prev.useBrandStyle
    }));
  };

  // –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —à–∞–≥ –±—Ä–µ–Ω–¥–∏–Ω–≥–∞
  const skipBrandStep = () => {
    setConfig(prev => ({
      ...prev,
      useBrandStyle: false,
      brandingData: null
    }));
    onNext();
  };

  // –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –±—Ä–µ–Ω–¥–∏–Ω–≥–∞
  const clearBrandStyle = () => {
    setBrandingData(null);
    setWebsiteUrl('');
    setConfig(prev => ({
      ...prev,
      brandingData: null,
      useBrandStyle: false
    }));
  };

  const isValidUrl = (string) => {
    try {
      new URL(string);
      return true;
    } catch {
      return false;
    }
  };

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —à–∞–≥–∞ */}
      <div className="text-center">
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="flex items-center justify-center gap-2 mb-2"
        >
          <Palette className="w-6 h-6 text-purple-600" />
          <h2 className="text-2xl font-bold">–§–∏—Ä–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</h2>
        </motion.div>
        <p className="text-gray-600">
          –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à —Å–∞–π—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–æ–≤ –≤ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏ –∏ —à—Ä–∏—Ñ—Ç–∞–º–∏
        </p>
      </div>

      {/* –í–≤–æ–¥ URL –∏ –∞–Ω–∞–ª–∏–∑ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Globe className="w-5 h-5" />
            –ê–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="space-y-2">
            <Label htmlFor="website-url">URL —Å–∞–π—Ç–∞</Label>
            <div className="flex gap-2">
              <Input
                id="website-url"
                placeholder="https://example.com"
                value={websiteUrl}
                onChange={(e) => {
                  setWebsiteUrl(e.target.value);
                  setError('');
                }}
                disabled={isAnalyzing}
                className={error ? 'border-red-500' : ''}
              />
              <Button 
                onClick={analyzeBrandStyle}
                disabled={isAnalyzing || !websiteUrl.trim()}
                className="shrink-0"
              >
                {isAnalyzing ? (
                  <>
                    <Loader2 className="w-4 h-4 mr-2 animate-spin" />
                    –ê–Ω–∞–ª–∏–∑...
                  </>
                ) : (
                  <>
                    <Sparkles className="w-4 h-4 mr-2" />
                    –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
                  </>
                )}
              </Button>
            </div>
            {error && (
              <p className="text-sm text-red-600">{error}</p>
            )}
          </div>

          {/* –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä URL */}
          {websiteUrl && isValidUrl(websiteUrl) && (
            <div className="p-3 bg-gray-50 rounded-lg">
              <p className="text-sm text-gray-600 mb-2">–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä:</p>
              <div className="flex items-center gap-2">
                <Globe className="w-4 h-4 text-gray-400" />
                <span className="text-sm font-medium">{websiteUrl}</span>
              </div>
            </div>
          )}
        </CardContent>
      </Card>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ */}
      <AnimatePresence>
        {brandingData && (
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -20 }}
          >
            <Card className="border-green-200 bg-green-50">
              <CardHeader>
                <div className="flex items-center justify-between">
                  <CardTitle className="flex items-center gap-2 text-green-800">
                    <Target className="w-5 h-5" />
                    –ë—Ä–µ–Ω–¥–∏–Ω–≥ –∏–∑–≤–ª–µ—á–µ–Ω —É—Å–ø–µ—à–Ω–æ
                  </CardTitle>
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => setShowPreview(!showPreview)}
                  >
                    <Eye className="w-4 h-4 mr-2" />
                    {showPreview ? '–°–∫—Ä—ã—Ç—å' : '–ü–æ–∫–∞–∑–∞—Ç—å'} –¥–µ—Ç–∞–ª–∏
                  </Button>
                </div>
              </CardHeader>
              <CardContent className="space-y-4">
                {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <Label className="text-sm font-medium text-green-800">–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞</Label>
                    <p className="text-sm mt-1">{brandingData.title}</p>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-green-800">–û—Ç—Ä–∞—Å–ª—å</Label>
                    <Badge variant="secondary" className="mt-1">
                      {brandingData.industry}
                    </Badge>
                  </div>
                </div>

                {/* –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä */}
                <AnimatePresence>
                  {showPreview && (
                    <motion.div
                      initial={{ opacity: 0, height: 0 }}
                      animate={{ opacity: 1, height: 'auto' }}
                      exit={{ opacity: 0, height: 0 }}
                      className="space-y-4 pt-4 border-t border-green-200"
                    >
                      {/* –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ */}
                      {brandingData.colors && brandingData.colors.length > 0 && (
                        <div>
                          <Label className="text-sm font-medium text-green-800 flex items-center gap-2">
                            <Palette className="w-4 h-4" />
                            –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞
                          </Label>
                          <div className="flex flex-wrap gap-2 mt-2">
                            {brandingData.colors.slice(0, 8).map((color, index) => (
                              <div key={index} className="flex items-center gap-2">
                                <div 
                                  className="w-6 h-6 rounded border border-gray-300"
                                  style={{ backgroundColor: color }}
                                  title={color}
                                />
                                <span className="text-xs text-gray-600">{color}</span>
                              </div>
                            ))}
                          </div>
                        </div>
                      )}

                      {/* –®—Ä–∏—Ñ—Ç—ã */}
                      {brandingData.fonts && brandingData.fonts.length > 0 && (
                        <div>
                          <Label className="text-sm font-medium text-green-800 flex items-center gap-2">
                            <Type className="w-4 h-4" />
                            –®—Ä–∏—Ñ—Ç—ã
                          </Label>
                          <div className="flex flex-wrap gap-2 mt-2">
                            {brandingData.fonts.map((font, index) => (
                              <Badge key={index} variant="outline" className="text-xs">
                                {font}
                              </Badge>
                            ))}
                          </div>
                        </div>
                      )}

                      {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
                      {brandingData.description && (
                        <div>
                          <Label className="text-sm font-medium text-green-800">–û–ø–∏—Å–∞–Ω–∏–µ</Label>
                          <p className="text-sm mt-1 text-gray-700">
                            {brandingData.description.length > 200 
                              ? `${brandingData.description.substring(0, 200)}...`
                              : brandingData.description
                            }
                          </p>
                        </div>
                      )}
                    </motion.div>
                  )}
                </AnimatePresence>

                {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è */}
                <div className="flex items-center justify-between pt-2 border-t border-green-200">
                  <div>
                    <Label className="text-sm font-medium text-green-800">
                      –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏—Ä–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å
                    </Label>
                    <p className="text-xs text-gray-600 mt-1">
                      –ë–∞–Ω–Ω–µ—Ä—ã –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã –≤ —Å—Ç–∏–ª–µ –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞
                    </p>
                  </div>
                  <div className="flex gap-2">
                    <Button
                      variant={config.useBrandStyle ? "default" : "outline"}
                      size="sm"
                      onClick={toggleBrandStyle}
                    >
                      {config.useBrandStyle ? '–í–∫–ª—é—á–µ–Ω–æ' : '–í—ã–∫–ª—é—á–µ–Ω–æ'}
                    </Button>
                    <Button
                      variant="ghost"
                      size="sm"
                      onClick={clearBrandStyle}
                    >
                      –û—á–∏—Å—Ç–∏—Ç—å
                    </Button>
                  </div>
                </div>
              </CardContent>
            </Card>
          </motion.div>
        )}
      </AnimatePresence>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ */}
      {!brandingData && (
        <Card className="border-blue-200 bg-blue-50">
          <CardContent className="pt-6">
            <div className="text-center">
              <Sparkles className="w-12 h-12 text-blue-600 mx-auto mb-4" />
              <h3 className="text-lg font-semibold text-blue-800 mb-2">
                üé® –£–º–Ω–æ–µ –±—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–∏—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤
              </h3>
              <p className="text-sm text-blue-700 mb-4">
                –ù–∞—à–∞ AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à —Å–∞–π—Ç –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç –±–∞–Ω–Ω–µ—Ä—ã –≤ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ. 
                –≠—Ç–æ—Ç —à–∞–≥ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω ‚Äî –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–µ–Ω –±—Ä–µ–Ω–¥–∏–Ω–≥.
              </p>
              <div className="grid grid-cols-2 gap-4 text-xs text-blue-600 mb-4">
                <div>
                  <div className="font-medium mb-1">–ß—Ç–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º:</div>
                  <ul className="space-y-1">
                    <li>‚Ä¢ –¶–≤–µ—Ç–æ–≤—É—é –ø–∞–ª–∏—Ç—Ä—É</li>
                    <li>‚Ä¢ –®—Ä–∏—Ñ—Ç—ã –∏ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫—É</li>
                  </ul>
                </div>
                <div>
                  <div className="font-medium mb-1">–ß—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç–µ:</div>
                  <ul className="space-y-1">
                    <li>‚Ä¢ –ë–∞–Ω–Ω–µ—Ä—ã –≤ –≤–∞—à–µ–º —Å—Ç–∏–ª–µ</li>
                    <li>‚Ä¢ –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã</li>
                  </ul>
                </div>
              </div>
              <div className="text-xs text-blue-500 italic">
                ‚è±Ô∏è –ê–Ω–∞–ª–∏–∑ –∑–∞–π–º—ë—Ç 2-3 —Å–µ–∫—É–Ω–¥—ã
              </div>
            </div>
          </CardContent>
        </Card>
      )}

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div className="flex justify-between items-center">
        <Button
          variant="outline"
          onClick={onBack}
          className="flex items-center gap-2"
        >
          <ArrowLeft className="w-4 h-4" />
          –ù–∞–∑–∞–¥
        </Button>

        <div className="flex gap-2">
          <Button
            variant="ghost"
            onClick={skipBrandStep}
            className="flex items-center gap-2 text-gray-600"
          >
            –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–∞–ø
          </Button>
          
          <Button
            onClick={onNext}
            className="flex items-center gap-2"
          >
            –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
            <ArrowRight className="w-4 h-4" />
          </Button>
        </div>
      </div>
    </div>
  );
}