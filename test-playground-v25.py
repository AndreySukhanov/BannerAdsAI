#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Playground v2.5 –¥–ª—è —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤ BannerAdsAI
–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –≥—Ä–∞—Ñ–∏–∫–∏
"""

import torch
from diffusers import DiffusionPipeline
import time
import os

def test_playground_v25():
    print("üé® –¢–µ—Å—Ç–∏—Ä—É–µ–º Playground v2.5 –¥–ª—è —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å GPU
    if torch.cuda.is_available():
        print(f"‚úÖ GPU –¥–æ—Å—Ç—É–ø–Ω–æ: {torch.cuda.get_device_name()}")
        device = "cuda"
        dtype = torch.float16
    else:
        print("‚ö†Ô∏è GPU –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º CPU (–±—É–¥–µ—Ç –º–µ–¥–ª–µ–Ω–Ω–æ)")
        device = "cpu"
        dtype = torch.float32
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º Playground v2.5
        print("üì• –ó–∞–≥—Ä—É–∂–∞–µ–º Playground v2.5...")
        pipe = DiffusionPipeline.from_pretrained(
            "playgroundai/playground-v2.5-1024px-aesthetic",
            torch_dtype=dtype,
            variant="fp16" if device == "cuda" else None
        ).to(device)
        
        print("‚úÖ –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–æ–º–ø—Ç—ã –°–ü–ï–¶–ò–ê–õ–¨–ù–û –¥–ª—è —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤
        advertising_prompts = [
            {
                "prompt": "Professional e-commerce sale banner, '50% OFF' text, vibrant red and white colors, modern typography, commercial photography style, high quality, detailed, 8k",
                "name": "ecommerce_sale"
            },
            {
                "prompt": "Luxury fashion advertisement banner, elegant female model wearing designer clothes, minimalist aesthetic, premium brand style, soft lighting, commercial quality, detailed, 8k",
                "name": "fashion_luxury"
            },
            {
                "prompt": "Cryptocurrency trading platform banner, Bitcoin symbols, professional blue and gold color scheme, modern financial design, trustworthy corporate style, detailed, 8k",
                "name": "crypto_finance"
            },
            {
                "prompt": "Food delivery service advertisement, appetizing gourmet burger, warm inviting colors, lifestyle photography, commercial food styling, detailed, 8k",
                "name": "food_delivery"
            },
            {
                "prompt": "Tech startup mobile app banner, smartphone interface mockup, clean modern design, blue gradient background, professional UI/UX style, detailed, 8k",
                "name": "tech_app"
            },
            {
                "prompt": "Real estate luxury home advertisement, modern house exterior, professional architectural photography, premium real estate marketing style, detailed, 8k",
                "name": "real_estate"
            },
            {
                "prompt": "Banking services advertisement banner, professional businessman, corporate blue colors, trustworthy financial design, commercial portrait style, detailed, 8k",
                "name": "banking_services"
            },
            {
                "prompt": "Gaming advertisement banner, dynamic action scene, neon colors, energetic gaming aesthetic, modern esports style, high impact design, detailed, 8k",
                "name": "gaming_esports"
            }
        ]
        
        print(f"\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º {len(advertising_prompts)} —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤...")
        
        # –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç Playground
        generation_params = {
            "num_inference_steps": 50,      # –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ
            "guidance_scale": 3.0,          # –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ  
            "width": 1024,                  # –ù–∞—Ç–∏–≤–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
            "height": 1024
        }
        
        results = []
        
        for i, test_case in enumerate(advertising_prompts):
            print(f"\nüé® –¢–µ—Å—Ç {i+1}/{len(advertising_prompts)}: {test_case['name']}")
            print(f"üìù –ü—Ä–æ–º–ø—Ç: {test_case['prompt'][:60]}...")
            
            start_time = time.time()
            
            try:
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                image = pipe(
                    prompt=test_case["prompt"],
                    **generation_params
                ).images[0]
                
                generation_time = time.time() - start_time
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                output_path = f"playground_v25_{test_case['name']}.png"
                image.save(output_path)
                
                print(f"‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∑–∞ {generation_time:.2f} —Å–µ–∫")
                print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {output_path}")
                
                results.append({
                    "name": test_case['name'],
                    "time": generation_time,
                    "success": True,
                    "file": output_path
                })
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
                results.append({
                    "name": test_case['name'],
                    "time": 0,
                    "success": False,
                    "error": str(e)
                })
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        print("\n" + "="*50)
        print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø PLAYGROUND V2.5:")
        print("="*50)
        
        successful = [r for r in results if r['success']]
        failed = [r for r in results if not r['success']]
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π: {len(successful)}/{len(results)}")
        
        if successful:
            avg_time = sum(r['time'] for r in successful) / len(successful)
            print(f"‚ö° –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å: {avg_time:.2f} —Å–µ–∫/–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            
        print(f"\nüìä –û–¶–ï–ù–ö–ê –î–õ–Ø –†–ï–ö–õ–ê–ú–ù–´–• –ë–ê–ù–ù–ï–†–û–í:")
        print(f"‚úÖ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ: {'–î–ê' if len(successful) > 0 else '–ù–ï–¢'}")
        print(f"‚úÖ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è BannerAdsAI: {'–î–ê' if len(successful) >= 6 else '–ß–ê–°–¢–ò–ß–ù–û'}")
        print(f"‚úÖ –°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å: {len(successful)/len(results)*100:.1f}%")
        
        if failed:
            print(f"\n‚ö†Ô∏è –ù–µ—É–¥–∞—á–Ω—ã–µ —Ç–µ—Å—Ç—ã:")
            for fail in failed:
                print(f"   - {fail['name']}: {fail['error']}")
        
        print(f"\nüé® Playground v2.5 —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –≥—Ä–∞—Ñ–∏–∫–∏!")
        print(f"üöÄ –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Å—Ç—Ä–∞–∏–≤–∞—é—Ç - –≥–æ—Ç–æ–≤–∞ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ BannerAdsAI")
        
        return len(successful) >= 6  # 75% —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("- –û–±–Ω–æ–≤–∏—Ç–µ diffusers: pip install --upgrade diffusers")
        print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å GPU")
        print("- –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –Ω–∞–ª–∏—á–∏–∏ 12GB+ VRAM")
        return False

if __name__ == "__main__":
    print("üé® Playground v2.5 Test –¥–ª—è —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    try:
        import diffusers
        print(f"‚úÖ Diffusers –≤–µ—Ä—Å–∏—è: {diffusers.__version__}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
        from packaging import version
        min_version = "0.27.0"
        if version.parse(diffusers.__version__) < version.parse(min_version):
            print(f"‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è diffusers >= {min_version}")
            print(f"   –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {diffusers.__version__}")
            print("   –û–±–Ω–æ–≤–∏—Ç–µ: pip install --upgrade diffusers")
            
    except ImportError:
        print("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ diffusers: pip install diffusers")
        exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    success = test_playground_v25()
    
    if success:
        print("\nüöÄ –ì–û–¢–û–í–û! Playground v2.5 –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è BannerAdsAI")
        print("üìã –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ –ø—Ä–æ–¥–∞–∫—à–Ω")
    else:
        print("\n‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–ª–∏ –≤—ã–±–æ—Ä –¥—Ä—É–≥–æ–π –º–æ–¥–µ–ª–∏")
    
    print("\nüí° –î–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ BannerAdsAI –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è:")
    print("   - GPU —Å–µ—Ä–≤–µ—Ä —Å 12GB+ VRAM")
    print("   - API wrapper –¥–ª—è Playground v2.5")
    print("   - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏")